{
  "hash": "f3f833066763fd6ee9f1e9483e51d19a",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: 'Review of Data Science 1'\nformat:\n  html: default\neditor_options: \n  chunk_output_type: console\n---\n\n\n\n\nYou can download this .qmd file from [here](https://github.com/joeroith/264_spring_2025/blob/main/01_review164.qmd).  Just hit the Download Raw File button.\n\n\n### Determinants of COVID vaccination rates\n\n\n\n\n\n\n\n\n\nFirst, a little detour to describe several alternatives for reading in data:\n\nIf you navigate to [my Github account](https://github.com/joeroith), and find the `264_spring_2025` repo, there is a Data folder inside.  You can then click on `vacc_Mar21.csv` to see the data we want to download.   [This link](https://github.com/joeroith/264_spring_2025/blob/main/Data/vaccinations_2021.csv) should also get you there, but it's good to be able to navigate there yourself.\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Approach 1\nvaccine_data <- read_csv(\"Data/vaccinations_2021.csv\")  #<1>\n\n# Approach 2\nvaccine_data <- read_csv(\"~/264_spring_2025/Data/vaccinations_2021.csv\")  #<2>\n\n# Approach 3\nvaccine_data <- read_csv(\"https://joeroith.github.io/264_spring_2025/Data/vaccinations_2021.csv\")  #<3>\n\n# Approach 4\nvaccine_data <- read_csv(\"https://raw.githubusercontent.com/joeroith/264_spring_2025/refs/heads/main/Data/vaccinations_2021.csv\")  #<4>\n```\n:::\n\n\n\n\n1. Approach 1: create a Data folder in the same location where this .qmd file resides, and then store vaccinations_2021.csv in that Data folder\n2. Approach 2: give R the complete path to the location of vaccinations_2021.csv, starting with Home (~)\n3. Approach 3: link to our course webpage, and then know we have a Data folder containing all our csvs\n4. Approach 4: navigate to the data in GitHub, hit the Raw button, and copy that link\n\n\nA recent Stat 272 project examined determinants of covid vaccination rates at the county level.  Our data set contains 3053 rows (1 for each county in the US) and 14 columns; here is a quick description of the variables we'll be using:\n\n- `state` = state the county is located in\n- `county` = name of the county\n- `region` = region the state is located in\n- `metro_status` = Is the county considered \"Metro\" or \"Non-metro\"?\n- `rural_urban_code` = from 1 (most urban) to 9 (most rural)\n- `perc_complete_vac` = percent of county completely vaccinated as of 11/9/21\n- `tot_pop` = total population in the county\n- `votes_Trump` = number of votes for Trump in the county in 2020\n- `votes_Biden` = number of votes for Biden in the county in 2020\n- `perc_Biden` = percent of votes for Biden in the county in 2020\n- `ed_somecol_perc` = percent with some education beyond high school (but not a Bachelor's degree)\n- `ed_bachormore_perc` = percent with a Bachelor's degree or more\n- `unemployment_rate_2020` = county unemployment rate in 2020\n- `median_HHincome_2019` = county's median household income in 2019\n\n\n1. Consider only Minnesota and its surrounding states (Iowa, Wisconsin, North Dakota, and South Dakota).  We want to examine the relationship between the percentage who voted for Biden and the percentage of complete vaccinations by state.  Generate two plots to examine this relationship:\n\na) A scatterplot with points and smoothers colored by state.  Make sure the legend is ordered in a meaningful way, and include good labels on your axes and your legend.  Also leave off the error bars from your smoothers.\n\nb) One plot per state containing a scatterplot and a smoother.\n\nDescribe which plot you prefer and why.  What can you learn from your preferred plot?\n\n\n2. We wish to compare the proportions of counties in each region with median household income above the national median ($69,560).\n\na) Fill in the blanks below to produce a segmented bar plot with regions ordered from highest proportion above the median to lowest.\n\nb) Create a table of proportions by region to illustrate that your bar plot in (a) is in the correct order (you should find two regions that are *really* close when you just try to eyeball differences).\n\nc) Explain why we can replace `fct_relevel(region, FILL IN CODE)` with\n\n`mutate(region_sort = fct_reorder(region, median_HHincome_2019 < 69560, .fun = mean))` \n\nbut not\n\n`mutate(region_sort = fct_reorder(region, median_HHincome_2019 < 69560))`\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvaccine_data |>\n  mutate(HHincome_vs_national = ifelse(median_HHincome_2019 < 69560, FILL IN CODE)) |>\n  mutate(region_sort = fct_relevel(region, FILL IN CODE)) |>\n  ggplot(mapping = aes(x = region_sort, fill = HHincome_vs_national)) +\n    geom_bar(position = \"fill\")\n```\n:::\n\n\n\n\n\n3. We want to examine the distribution of total county populations and then see how it's related to vaccination rates.\n\na) *Carefully and thoroughly* explain why the two histograms below provide different plots.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvaccine_data |>\n  mutate(tot_pop_millions = tot_pop / 1000000) |>\n  ggplot(mapping = aes(x = tot_pop_millions)) +\n    geom_histogram(bins = 40) +\n    labs(x = \"Total population in millions\")\n```\n\n::: {.cell-output-display}\n![](01_review164_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n\n```{.r .cell-code}\nvaccine_data |>\n  mutate(tot_pop_millions = tot_pop %/% 1000000) |>\n  ggplot(mapping = aes(x = tot_pop_millions)) +\n    geom_histogram(bins = 40) +\n    labs(x = \"Total population in millions\")\n```\n\n::: {.cell-output-display}\n![](01_review164_files/figure-html/unnamed-chunk-4-2.png){width=672}\n:::\n:::\n\n\n\n\nb) Find the top 5 counties in terms of total population.\n\nc) Plot a histogram of logged population and describe this distribution.\n\nd) Plot the relationship between log population and percent vaccinated using separate colors for Metro and Non-metro counties (be sure there's no 3rd color used for NAs).  Reduce the size and transparency of each point to make the plot more readable.  Describe what you can learn from this plot.\n\n\n4. Produce 3 different plots for illustrating the relationship between the rural_urban_code and percent vaccinated.  Hint: you can sometimes turn numeric variables into categorical variables for plotting purposes (e.g. `as.factor()`, `ifelse()`).\n\nState your favorite plot, why you like it better than the other two, and what you can learn from your favorite plot.  Create an alt text description of your favorite plot, using the Four Ingredient Model.  See [this link](https://drive.google.com/file/d/1BuEbL6vETBcFULmtlrwwZBUYhdEg0Zqb/view?usp=sharing) for reminders and references about alt text.\n\n\n5. BEFORE running the code below, sketch the plot that will be produced by R.  AFTER running the code, describe what conclusion(s) can we draw from this plot?  \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvaccine_data |>\n  filter(!is.na(perc_Biden)) |>\n  mutate(big_states = fct_lump(state, n = 10)) |>\n  group_by(big_states) |>\n  summarize(IQR_Biden = IQR(perc_Biden)) |>\n  mutate(big_states = fct_reorder(big_states, IQR_Biden)) |>\n  ggplot() + \n    geom_point(aes(x = IQR_Biden, y = big_states))\n```\n:::\n\n\n\n\n\n6. In this question we will focus only on the 12 states in the Midwest (i.e. where region == \"Midwest\").\n\na) Create a tibble with the following information for each state.  Order states from least to greatest state population.\n\n- number of different `rural_urban_code`s represented among the state's counties (there are 9 possible)\n- total state population\n- proportion of Metro counties\n- median unemployment rate \n\nb) Use your tibble in (a) to produce a plot of the relationship between proportion of Metro counties and median unemployment rate.  Points should be colored by the number of different `rural_urban_code`s in a state, but a single linear trend should be fit to all points.  What can you conclude from the plot?\n\n\n7. Generate an appropriate plot to compare vaccination rates between two subregions of the US: New England (which contains the states Maine, Vermont, New Hampshire, Massachusetts, Connecticut, Rhode Island) and the Upper Midwest (which, according to the USGS, contains the states Minnesota, Wisconsin, Michigan, Illinois, Indiana, and Iowa).  What can you conclude from your plot?\n\n\nIn this next section, we consider a few variables that could have been included in our data set, but were NOT.  Thus, you won't be able to write and test code, but you nevertheless should be able to use your knowledge of the tidyverse to answer these questions.\n\nHere are the hypothetical variables:\n\n- HR_party = party of that county's US Representative (Republican, Democrat, Independent, Green, or Libertarian)\n- people_per_MD = number of residents per doctor (higher values = fewer doctors)\n- perc_over_65 = percent of residents over 65 years old\n- perc_white = percent of residents who identify as white\n\n\n8. Hypothetical R chunk #1:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Hypothetical R chunk 1\ntemp <- vaccine_data |>\n  mutate(new_perc_vac = ifelse(perc_complete_vac > 95, NA, perc_complete_vac),\n         MD_group = cut_number(people_per_MD, 3)) |>\n  group_by(MD_group) |>\n  summarise(n = n(),\n            mean_perc_vac = mean(new_perc_vac, na.rm = TRUE),\n            mean_white = mean(perc_white, na.rm = TRUE))\n```\n:::\n\n\n\n\na) Describe the tibble `temp` created above.  What would be the dimensions?  What do rows and columns represent?\n\nb) What would happen if we replaced `new_perc_vac = ifelse(perc_complete_vac > 95, NA, perc_complete_vac)` with `new_perc_vac = ifelse(perc_complete_vac > 95, perc_complete_vac, NA)`?\n\nc) What would happen if we replaced `mean_white = mean(perc_white, na.rm = TRUE)` with `mean_white = mean(perc_white)`?\n\nd) What would happen if we removed `group_by(MD_group)`?\n\n\n9. Hypothetical R chunk #2:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Hypothetical R chunk 2\nggplot(data = vaccine_data) +\n  geom_point(mapping = aes(x = perc_over_65, y = perc_complete_vac, \n                           color = HR_party)) +\n  geom_smooth()\n\ntemp <- vaccine_data |>\n  group_by(HR_party) |>\n  summarise(var1 = n()) |>\n  arrange(desc(var1)) |>\n  slice_head(n = 3)\n\nvaccine_data |>\n  ggplot(mapping = aes(x = fct_reorder(HR_party, perc_over_65, .fun = median), \n                       y = perc_over_65)) +\n    geom_boxplot()\n```\n:::\n\n\n\n\na) Why would the first plot produce an error?\n\nb) Describe the tibble `temp` created above.  What would be the dimensions?  What do rows and columns represent?\n\nc) What would happen if we replaced `fct_reorder(HR_party, perc_over_65, .fun = median)` with `HR_party`?\n\n\n10. Hypothetical R chunk #3:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Hypothetical R chunk 3\nvaccine_data |>\n  filter(!is.na(people_per_MD)) |>\n  mutate(state_lump = fct_lump(state, n = 4)) |>\n  group_by(state_lump, rural_urban_code) |>\n  summarise(mean_people_per_MD = mean(people_per_MD)) |>\n  ggplot(mapping = aes(x = rural_urban_code, y = mean_people_per_MD, \n      colour = fct_reorder2(state_lump, rural_urban_code, mean_people_per_MD))) +\n    geom_line()\n```\n:::\n\n\n\n\na) Describe the tibble piped into the ggplot above.  What would be the dimensions?  What do rows and columns represent?\n\nb) Carefully describe the plot created above.\n\nc) What would happen if we removed `filter(!is.na(people_per_MD))`?\n\nd) What would happen if we replaced `fct_reorder2(state_lump, rural_urban_code, mean_people_per_MD)` with `state_lump`?\n",
    "supporting": [
      "01_review164_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}